name: release

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

env:
  APP_NAME: 'manticore-buddy'
  PHP_VERSION: '8.1.11'
  MAINTAINER: 'Manticore'
  DESC: 'Manticore Buddy'

jobs:
  build-artifact:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        run: ./bin/build --name="Manticore Buddy" --package="manticore-buddy" --index="src/main.php"

      - id: vars
        run: |
          echo "::set-output name=app_version::$(<APP_VERSION)"

      - name: Create artifact
        run: |
          name="${{ env.APP_NAME }}_${{ steps.vars.outputs.app_version }}-$( date +%y%m%d )-${GITHUB_SHA:0:7}"
          echo "$name"
          tar czf "$name.tar.gz" build/manticore-buddy
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            ./*.tar.gz

  build-linux-packages:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        run: ./bin/build --name="Manticore Buddy" --package="manticore-buddy" --index="src/main.php"
      - id: vars
        run: |
          echo "::set-output name=app_version::$(<APP_VERSION)"
      - name: Prepare packages structure
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .rpmpkg/usr/bin
          cp -p ./build/manticore-buddy .debpkg/usr/bin/${{ env.APP_NAME }}
          cp -p ./build/manticore-buddy .rpmpkg/usr/bin/${{ env.APP_NAME }}
      - uses: manticoresoftware/actions-build-deb-action@master
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ steps.vars.outputs.app_version }}
          arch: 'amd64'
          desc: '${{ env.DESC }}'

      - uses: manticoresoftware/actions-build-rpm-action@master
        with:
          summary: '${{ env.DESC }}'
          package: ${{ env.APP_NAME }}
          package_root: .rpmpkg
          maintainer: ${{ env.MAINTAINER }}
          version: v${{ steps.vars.outputs.app_version }}
          arch: 'x86_64'
          desc: '${{ env.DESC }}'

      - name: Rename packages to proper name
        run: |
          ls -la ./*.rpm
          version=${{ steps.vars.outputs.app_version }}
          rpm_path="./${{ env.APP_NAME }}-${version}-1.el7.x86_64.rpm"
          rpm_suffix=$( date +%y%m%d ).${GITHUB_SHA:0:7}
          cp $rpm_path "./${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el7.x86_64.rpm"
          cp $rpm_path "./${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el8.x86_64.rpm"
          mv $rpm_path "./${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el9.x86_64.rpm"

          ls -la ./*.deb
          deb_path="./${{ env.APP_NAME }}_${version}_amd64.deb"
          mv "$deb_path" ./${{ env.APP_NAME }}_${version}-$( date +%y%m%d )-${GITHUB_SHA:0:7}_amd64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb-amd64
          path: |
            ./*.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-rpm-amd64
          path: |
            ./*.rpm
            !./*-debuginfo-*.rpm

  build-linux-packages-arm64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        run: ./bin/build --name="Manticore Buddy" --package="manticore-buddy" --index="src/main.php"

      - id: vars
        run: |
          echo "::set-output name=app_version::$(<APP_VERSION)"

      - name: Prepare package
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .rpmpkg/usr/bin
          cp -p ./build/manticore-buddy .debpkg/usr/bin/${{ env.APP_NAME }}
          cp -p ./build/manticore-buddy .rpmpkg/usr/bin/${{ env.APP_NAME }}

      - uses: manticoresoftware/actions-build-deb-action@master
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: v${{ steps.vars.outputs.app_version }}
          arch: 'arm64'
          desc: '${{ env.DESC }}'

      - name: Rename package to proper name
        run: |
          ls -la ./*.deb
          version=${{ steps.vars.outputs.app_version }}
          deb_path="./${{ env.APP_NAME }}_${version}_arm64.deb"
          mv "$deb_path" ./${{ env.APP_NAME }}_${version}-$( date +%y%m%d )-${GITHUB_SHA:0:7}_arm64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb-arm64
          path: |
            ./*.deb

      - uses: manticoresoftware/actions-run-on-arch-action@master
        name: Preparing EL7 RPM package
        with:
          arch: aarch64
          distro: centos7
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            yum install -y sudo git kernel-devel kernel-headers
            yum groupinstall -y "Development Tools"
          run: |
            RPMBUILD_DIR="$HOME/rpmbuild"
            RPMBUILD_SOURCE_DIR="$RPMBUILD_DIR/SOURCES"
            RPMBUILD_SPEC_DIR="$RPMBUILD_DIR/SPECS"
            mkdir -p .rpmpkg/usr/bin
            cp -p build/manticore-buddy .rpmpkg/usr/bin/${{ env.APP_NAME }}
            WORKDIR="/tmp/work"
            mkdir "$WORKDIR"
            cp packages/rpm.spec "$WORKDIR"
            cp -rp ".rpmpkg" "$WORKDIR/${{ env.APP_NAME }}"
            cd "$WORKDIR"

            # Prepare spec file for RPM
            sed -i 's/{{ NAME }}/${{ env.APP_NAME }}/g' rpm.spec
            sed -i 's/{{ VERSION }}/${{ steps.vars.outputs.app_version }}/g' rpm.spec
            sed -i 's/{{ MAINTAINER }}/${{ env.MAINTAINER }}/g' rpm.spec
            sed -i 's/{{ DESC }}/${{ env.DESC }}/g' rpm.spec
            sed -i 's/{{ ARCH }}/aarch64/g' rpm.spec

            tar czf tmp.tar.gz "${{ env.APP_NAME }}/"
            mkdir -p "$RPMBUILD_SOURCE_DIR"
            mkdir -p "$RPMBUILD_SPEC_DIR"
            mv tmp.tar.gz "$RPMBUILD_SOURCE_DIR"
            cp -p rpm.spec "$RPMBUILD_SPEC_DIR"
            rpmbuild -bb "$RPMBUILD_SPEC_DIR/rpm.spec"
            cp -p "$RPMBUILD_DIR/RPMS/$(uname -m)"/*.rpm /artifacts/

      - name: Rename package to proper name
        run: |
          ls -la ./artifacts/*.rpm
          version=${{ steps.vars.outputs.app_version }}
          rpm_path="./artifacts/${{ env.APP_NAME }}-${version}-1.el7.aarch64.rpm"
          rpm_suffix=$( date +%y%m%d ).${GITHUB_SHA:0:7}
          cp $rpm_path "./artifacts/${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el7.aarch64.rpm"
          cp $rpm_path "./artifacts/${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el8.aarch64.rpm"
          mv $rpm_path "./artifacts/${{ env.APP_NAME }}-${version}_${rpm_suffix}-1.el9.aarch64.rpm"

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-rpm-arm64
          path: |
            ./artifacts/*.rpm
            !./artifacts/*-debuginfo-*.rpm

  create-release:
    runs-on: ubuntu-22.04
    needs:
      - build-artifact
      - build-linux-packages
      - build-linux-packages-arm64
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate changelog
        run: |
          bin/git-changelog > ./changelog

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./changelog
          draft: true
          prerelease: false

  deploy:
    needs:
      - build-artifact
      - build-linux-packages
      - build-linux-packages-arm64
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: stretch
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: stretch
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: buster
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: buster
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: xenial
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: xenial
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: bionic
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: bionic
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: focal
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: focal
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: jammy
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: jammy
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: bullseye
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: bullseye
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 7
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 7
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 8
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 8
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 9
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 9
          - artifact: artifact
            ext: tar.gz
            script: bin/upload_repo_arc
            distro: ""
    steps:
      - uses: actions/checkout@v3
      - run: mkdir build
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ./build
      - id: vars
        run: |
          echo "::set-output name=asset_name::$(ls ./build/*.${{ matrix.ext }} | head -n 1)"

      - name: Deploy package
        run: |
          export GPG_SECRET=${{ secrets.GPG_SECRET }}
          DISTRO=${{ matrix.distro }} ${{ matrix.script }}
        shell: bash
