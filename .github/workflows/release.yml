name: release

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

env:
  APP_NAME: 'manticore-buddy'
  PHP_VERSION: '8.1.11'
  MAINTAINER: 'Manticore'
  DESC: 'Manticore Buddy'
  LIBCURL_NAME: 'libcurl'
  LIBCURL_VERSION: '7.29.0'

jobs:
  build-artifact:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        run: ./bin/build --name="Manticore Buddy" --package="manticore-buddy" --index="src/main.php"

      - id: vars
        run: |
          echo "::set-output name=app_version::$(<APP_VERSION)"

      - name: Create artifact
        run: |
          name="${{ env.APP_NAME }}_${{ steps.vars.outputs.app_version }}-$( date +%y%m%d )-${GITHUB_SHA:0:7}"
          echo "$name"
          tar czf "$name.tar.gz" build/manticore-buddy
          mkdir -p share/modules
          cp build/manticore-buddy.phar share/modules/
          zip -r "$name.zip" share
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            ./*.tar.gz
            ./*.zip

  build-linux-packages:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        run: ./bin/build --name="Manticore Buddy" --package="manticore-buddy" --index="src/main.php"
      - id: vars
        run: |
          echo "::set-output name=app_version::$(<APP_VERSION)"
      - name: Prepare packages structure
        run: |
          mkdir -p .debpkg/usr/share/manticore/modules
          mkdir -p .rpmpkg/usr/share/manticore/modules
          cp -p ./build/manticore-buddy .debpkg/usr/share/manticore/modules/${{ env.APP_NAME }}
          cp -p ./build/manticore-buddy .rpmpkg/usr/share/manticore/modules/${{ env.APP_NAME }}
      - uses: manticoresoftware/actions-build-deb-action@master
        name: Build DEB packages
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ steps.vars.outputs.app_version }}
          arch: 'all'
          desc: '${{ env.DESC }}'
          depends: '${{ env.LIBCURL_NAME }}4 (>= ${{ env.LIBCURL_VERSION}})'

      - name: Build RPM packages
        run: |
          sudo apt-get update -y -q
          sudo apt-get install -y rpm

          RPMBUILD_DIR="$HOME/rpmbuild"
          RPMBUILD_SOURCE_DIR="$RPMBUILD_DIR/SOURCES"
          RPMBUILD_SPEC_DIR="$RPMBUILD_DIR/SPECS"
          mkdir -p .rpmpkg/usr/bin

          WORKDIR="/tmp/work"
          mkdir "$WORKDIR"
          spec_file=rpm.spec
          cp "packages/$spec_file" "$WORKDIR"
          cp -rp ".rpmpkg" "$WORKDIR/${{ env.APP_NAME }}"
          cd "$WORKDIR"

          # Prepare spec file for RPM
          sed -i 's/{{ NAME }}/${{ env.APP_NAME }}/g' $spec_file
          sed -i 's/{{ VERSION }}/v${{ steps.vars.outputs.app_version }}/g' $spec_file
          sed -i 's/{{ MAINTAINER }}/${{ env.MAINTAINER }}/g' $spec_file
          sed -i 's/{{ DESC }}/${{ env.DESC }}/g' $spec_file
          sed -i 's/{{ LIBCURL_NAME }}/${{ env.LIBCURL_NAME }}/g' $spec_file
          sed -i 's/{{ LIBCURL_VERSION }}/v${{ env.LIBCURL_VERSION }}/g' $spec_file

          tar czf tmp.tar.gz "${{ env.APP_NAME }}/"
          mkdir -p "$RPMBUILD_SOURCE_DIR"
          mkdir -p "$RPMBUILD_SPEC_DIR"
          mv tmp.tar.gz "$RPMBUILD_SOURCE_DIR"
          cp -p $spec_file "$RPMBUILD_SPEC_DIR"
          rpmbuild -bb "$RPMBUILD_SPEC_DIR/$spec_file"
          ls -lah "$RPMBUILD_DIR/RPMS/noarch"/*.rpm
          cp -p "$RPMBUILD_DIR/RPMS/noarch"/*.rpm $GITHUB_WORKSPACE

      - name: Rename packages to proper name
        run: |
          ls -la ./*.rpm
          version=${{ steps.vars.outputs.app_version }}
          rpm_path="./${{ env.APP_NAME }}-v${version}-1.noarch.rpm"
          rpm_suffix=$( date +%y%m%d ).${GITHUB_SHA:0:7}
          cp $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el7.x86_64.rpm"
          cp $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el7.aarch64.rpm"
          cp $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el8.x86_64.rpm"
          cp $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el8.aarch64.rpm"
          cp $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el9.x86_64.rpm"
          mv $rpm_path "./${{ env.APP_NAME }}-v${version}_${rpm_suffix}-1.el9.aarch64.rpm"

          ls -la ./*.deb
          deb_path="./${{ env.APP_NAME }}_${version}_all.deb"
          cp "$deb_path" ./${{ env.APP_NAME }}_${version}-$( date +%y%m%d )-${GITHUB_SHA:0:7}_amd64.deb
          mv "$deb_path" ./${{ env.APP_NAME }}_${version}-$( date +%y%m%d )-${GITHUB_SHA:0:7}_arm64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb-amd64
          path: |
            ./*amd64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb-arm64
          path: |
            ./*arm64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-rpm-amd64
          path: |
            ./*x86_64.rpm
            !./*-debuginfo-*.rpm

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-rpm-arm64
          path: |
            ./*aarch64.rpm
            !./*-debuginfo-*.rpm

  create-release:
    runs-on: ubuntu-22.04
    needs:
      - build-artifact
      - build-linux-packages
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate changelog
        run: |
          bin/git-changelog > ./changelog

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./changelog
          draft: true
          prerelease: false

  deploy:
    needs:
      - build-artifact
      - build-linux-packages
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: stretch
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: stretch
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: buster
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: buster
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: xenial
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: xenial
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: bionic
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: bionic
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: focal
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: focal
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: jammy
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: jammy
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: bullseye
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: bullseye
          - artifact: artifact-deb-amd64
            ext: deb
            script: bin/upload_repo_deb
            distro: bookworm
          - artifact: artifact-deb-arm64
            ext: deb
            script: bin/upload_repo_deb
            distro: bookworm
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 7
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 7
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 8
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 8
          - artifact: artifact-rpm-amd64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 9
          - artifact: artifact-rpm-arm64
            ext: rpm
            script: bin/upload_repo_rpm
            distro: 9
          - artifact: artifact
            ext: {tar.gz,zip}
            script: bin/upload_repo_arc
            distro: ""
    steps:
      - uses: actions/checkout@v3
      - run: mkdir build
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ./build
      - id: vars
        run: |
          echo "::set-output name=asset_name::$(ls ./build/*.${{ matrix.ext }} | head -n 1)"

      - name: Deploy package
        run: |
          export GPG_SECRET=${{ secrets.GPG_SECRET }}
          DISTRO=${{ matrix.distro }} ${{ matrix.script }}
        shell: bash
